package rw.bk.filmfan.activities.login;import androidx.appcompat.app.AppCompatActivity;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import android.widget.Toast;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.JsonObjectRequest;import com.android.volley.toolbox.Volley;import org.json.JSONException;import org.json.JSONObject;import java.util.HashMap;import rw.bk.filmfan.BuildConfig;import rw.bk.filmfan.R;import rw.bk.filmfan.activities.home.home;import rw.bk.filmfan.configs.config;import rw.bk.filmfan.helpers.prefManager;public class login extends AppCompatActivity {    config conf;    EditText username;    EditText password;    Button login;    ImageView back;    String request_token="";    SharedPreferences pref;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_login);        pref=getSharedPreferences("filmfan", 0);        username=findViewById(R.id.username);        password=findViewById(R.id.password);        login=findViewById(R.id.login);        login.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                String Username=username.getText().toString();                String Password=password.getText().toString();                if(!Username.isEmpty()&&!Password.isEmpty()&&request_token!=""){                    HashMap<String, String> loginInfo = new HashMap<String, String>();                    loginInfo.put("username",Username);                    loginInfo.put("password",Password);                    loginInfo.put("request_token",request_token);                    loginRequest(loginInfo);                }            }        });        back=findViewById(R.id.back);        back.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                finish();            }        });        // request token        getRequestToken();    }    // get request token    public void getRequestToken(){        String url = conf.GET_REQUEST_TOKEN+"?api_key="+ BuildConfig.api_key;        RequestQueue requestQueue = Volley.newRequestQueue(this);        JsonObjectRequest movieRequest = new JsonObjectRequest(Request.Method.GET,url,null,                new Response.Listener<JSONObject>() {                    @Override                    public void onResponse(JSONObject response) {                        Log.i("request token",response.toString());                        try{                            request_token=response.getString("request_token");                        } catch(JSONException e){                            Log.e("error",e.getMessage());                        }                    }                },                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        Log.i("error",error.getMessage());                        Toast.makeText(login.this, "something went wrong, please try again", Toast.LENGTH_SHORT).show();                    }                }        );        requestQueue.add(movieRequest);    }    // LOGIN REQUEST    public void loginRequest(HashMap loginInfo){        login.setText("Loading...");        String url = conf.LOGIN+"?api_key="+ BuildConfig.api_key;        RequestQueue requestQueue = Volley.newRequestQueue(this);        JsonObjectRequest loginRequest = new JsonObjectRequest(Request.Method.POST, url,new JSONObject(loginInfo),                new Response.Listener<JSONObject>() {                    @Override                    public void onResponse(JSONObject response) {                        Log.i("login",response.toString());                        try{                            if(response.getBoolean("success")==true){                              // if login successed , create session                                HashMap<String, String> sessionRequestBody= new HashMap<String, String>();                                sessionRequestBody.put("request_token",request_token);                                createSession(sessionRequestBody);                            }else{                                login.setText("Login");                                Toast.makeText(login.this, "Invalid credentials", Toast.LENGTH_SHORT).show();                            }                        }catch (JSONException e){                           e.printStackTrace();                        }                    }                },                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        login.setText("Login");                    }                }        );        requestQueue.add(loginRequest);    }    // create session    public void createSession(HashMap requestSessionBody){        String url = conf.CREATE_SESSION+"?api_key="+ BuildConfig.api_key;        RequestQueue requestQueue = Volley.newRequestQueue(this);        JsonObjectRequest loginRequest = new JsonObjectRequest(Request.Method.POST, url,new JSONObject(requestSessionBody),                new Response.Listener<JSONObject>() {                    @Override                    public void onResponse(JSONObject response) {                        login.setText("Login");                        Log.i("create session",response.toString());                        try{                            if(response.getBoolean("success")==true){                                // store session_id for future use                                prefManager.storeUserSession(pref,response.getString("session_id"));                                Intent goHome=new Intent(login.this,home.class);                                startActivity(goHome);                                finish();                            }else{                                login.setText("Login");                                Toast.makeText(login.this, "something went wrong", Toast.LENGTH_SHORT).show();                            }                        }catch (JSONException e){                            e.printStackTrace();                        }                    }                },                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        login.setText("Login");                        Log.i("errorr",error.getMessage());                        login.setText("Login");                    }                }        );        requestQueue.add(loginRequest);    }}